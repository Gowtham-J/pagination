{"version":3,"sources":["utils.js","Follower.js","App.js","useFetch.js","reportWebVitals.js","index.js"],"names":["paginate","followers","numberOfPages","Math","ceil","length","Array","from","_","index","start","slice","Follower","login","avatar_url","html_url","className","src","alt","href","App","useState","loading","setLoading","data","setData","getProducts","a","fetch","response","json","useEffect","useFetch","follower","setFollower","page","setPage","map","id","item","onClick","handlePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAaeA,EAbE,SAACC,GAGhB,IACMC,EAAgBC,KAAKC,KAAKH,EAAUI,OADrB,IAOrB,OAJqBC,MAAMC,KAAK,CAAEF,OAAQH,IAAiB,SAACM,EAAGC,GAC7D,IAAMC,EAJa,GAILD,EACd,OAAOR,EAAUU,MAAMD,EAAOA,EALX,Q,OCWRE,EAZE,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACrC,OACE,0BAASC,UAAU,OAAnB,UACE,qBAAKC,IAAKH,EAAYI,IAAKL,IAC3B,6BAAKA,IACL,mBAAGG,UAAU,MAAMG,KAAMJ,EAAzB,8BC2CSK,MA/Cf,WACE,MCAsB,WACtB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAPf,mEAMU,cACZC,EADY,gBAECA,EAASC,OAFV,OAEZN,EAFY,OAGlBC,EAAQzB,EAASwB,IACjBD,GAAW,GAJO,2CAAH,qDAWjB,OAJAQ,qBAAU,WACRL,MACC,IAEI,CAAEJ,UAASE,QDfQQ,GAAlBV,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,KACjB,EAAgCH,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAwBb,mBAAS,GAAjC,mBAAOc,EAAP,KAAaC,EAAb,KAYA,OAVAL,qBAAU,WACJT,GAEJY,EAAYV,EAAKW,MAChB,CAACb,EAASa,IAOX,iCACE,sBAAKnB,UAAU,gBAAf,UACE,6BAAKM,EAAU,aAAe,eAC9B,qBAAKN,UAAU,iBAEjB,0BAASA,UAAU,YAAnB,UACE,qBAAKA,UAAU,YAAf,SACGiB,EAASI,KAAI,SAACJ,GACb,OAAO,cAAC,EAAD,eAAgCA,GAAjBA,EAASK,UAGjChB,GACA,qBAAKN,UAAU,gBAAf,SACGQ,EAAKa,KAAI,SAACE,EAAM9B,GACf,OACE,wBACEO,UAAS,mBAAcP,IAAU0B,EAAO,aAAe,MACvDK,QAAS,kBAtBN,SAAC/B,GAClB2B,EAAQ3B,GAqBqBgC,CAAWhC,IAF5B,SAKGA,EAAQ,GAFJA,eEzBRiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.51cb2054.chunk.js","sourcesContent":["const paginate = (followers) => {\r\n  //   console.log(followers);\r\n\r\n  const itemsPerPage = 10;\r\n  const numberOfPages = Math.ceil(followers.length / itemsPerPage);\r\n\r\n  const newFollowers = Array.from({ length: numberOfPages }, (_, index) => {\r\n    const start = index * itemsPerPage;\r\n    return followers.slice(start, start + itemsPerPage);\r\n  });\r\n  return newFollowers;\r\n};\r\n\r\nexport default paginate;\r\n","import React from \"react\";\r\n\r\nconst Follower = ({ login, avatar_url, html_url }) => {\r\n  return (\r\n    <article className=\"card\">\r\n      <img src={avatar_url} alt={login} />\r\n      <h4>{login}</h4>\r\n      <a className=\"btn\" href={html_url}>\r\n        view profile\r\n      </a>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Follower;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useFetch } from \"./useFetch\";\nimport Follower from \"./Follower\";\nfunction App() {\n  const { loading, data } = useFetch();\n  const [follower, setFollower] = useState([]);\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    if (loading) return;\n\n    setFollower(data[page]);\n  }, [loading, page]);\n\n  const handlePage = (index) => {\n    setPage(index);\n  };\n\n  return (\n    <main>\n      <div className=\"section-title\">\n        <h1>{loading ? \"loading...\" : \"pagination\"}</h1>\n        <div className=\"underline\"></div>\n      </div>\n      <section className=\"followers\">\n        <div className=\"container\">\n          {follower.map((follower) => {\n            return <Follower key={follower.id} {...follower} />;\n          })}\n        </div>\n        {!loading && (\n          <div className=\"btn-container\">\n            {data.map((item, index) => {\n              return (\n                <button\n                  className={`page-btn ${index === page ? \"active-btn\" : null}`}\n                  onClick={() => handlePage(index)}\n                  key={index}\n                >\n                  {index + 1}\n                </button>\n              );\n            })}\n          </div>\n        )}\n      </section>\n    </main>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\r\nimport paginate from \"./utils\";\r\nconst url = \"https://api.github.com/users/john-smilga/followers?per_page=100\";\r\n\r\nexport const useFetch = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n\r\n  const getProducts = async () => {\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setData(paginate(data));\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  return { loading, data };\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}